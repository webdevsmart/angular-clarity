{
  "name": "@clr/clarity",
  "version": "2.2.0",
  "private": true,
  "scripts": {
    "ng": "ng",
    "clean": "del ./dist",
    "start": "npm run angular:dev:start",
    "build": "npm-run-all clean ui:build icons:build base:build angular:build schematics:build angular:golden base:golden angular:dev:build base:dev:build",
    "build:ci": "npm-run-all format lint build test",
    "test": "npm-run-all angular:test base:test",
    "test:a11y": "node scripts/axe",
    "prelint": "tsc -p tests/tslint/tsconfig.json",
    "lint": "npm-run-all ui:lint base:lint angular:lint ",
    "lint:fix": "npm-run-all ui:lint:fix base:lint:fix angular:lint:fix",
    "license:fix": "node scripts/update-license",
    "format": "prettier --list-different './**/*.{js,json,md,ts,scss}'",
    "format:fix": "pretty-quick --staged",
    "format:file": "prettier --write",
    "gemini": "npm-run-all base:sass 'gemini:light -- {*}' 'gemini:dark -- {*}' --",
    "gemini:light": "./scripts/docker-cdc.js -t",
    "gemini:dark": "./scripts/docker-cdc.js -t -c dark",
    "gemini:fix": "npm-run-all 'gemini:fix:light -- {*}' 'gemini:fix:dark -- {*}' --",
    "gemini:fix:light": "./scripts/docker-cdc.js -u",
    "gemini:fix:dark": "./scripts/docker-cdc.js -u -c dark",
    "applitools:vars": "./scripts/load-vars.sh",
    "applitools:ci": "npm-run-all applitools:vars applitools",
    "applitools:serve": "lite-server --baseDir=dist/dev",
    "applitools": "npm-run-all -c applitools:light applitools:dark",
    "applitools:run": "cypress run",
    "applitools:light": "cross-env-shell CLARITY_THEME=light npm-run-all base:sass angular:dev:build -p -r applitools:serve applitools:run",
    "applitools:dark": "cross-env-shell CLARITY_THEME=dark npm-run-all base:sass angular:dev:build:dark -p -r applitools:serve applitools:run",
    "changelog": "conventional-changelog -p angular -i CHANGELOG.md -s -r 0",
    "publish:latest": "npm publish dist/clr-ui; npm publish dist/clr-angular; npm publish dist/clr-icons",
    "publish:next": "npm publish dist/clr-ui --tag next; npm publish dist/clr-angular --tag next; npm publish dist/clr-icons --tag next",
    "publish:local": "npm publish dist/clr-ui --registry http://localhost:4873; npm publish dist/clr-angular --registry http://localhost:4873; npm publish dist/clr-icons --registry http://localhost:4873",
    "angular:build": "npm-run-all angular:build:package angular:build:ngpackagr",
    "angular:build:package": "cpy ./npm/clr-angular/package.json ./npm/clr-angular/README.md ./src/clr-angular/; replace '@VERSION' $npm_package_version ./src/clr-angular/package.json",
    "angular:build:ngpackagr": "ng build clr-angular",
    "angular:test": "ng test clr-angular --watch false --code-coverage && npm run angular:golden:test",
    "angular:test:watch": "ng test clr-angular --watch --code-coverage",
    "angular:lint": "npm run prelint && tslint -p . -c tslint.json \"clr-angular/**/*.ts\" && tslint -p . -c tslint.json \"dev/**/*.ts\" && tslint -p . -c tslint.json \"website/**/*.ts\" && stylelint \"src/clr-angular/**/*.scss\" \"src/dev/**/*.scss\" \"src/website/**/*.scss\"",
    "angular:lint:fix": "npm run prelint && tslint --fix -p . -c tslint.json \"clr-angular/**/*.ts\" && tslint --fix -p . -c tslint.json \"dev/**/*.ts\" && stylelint --fix \"src/clr-angular/**/*.scss\" \"src/dev/**/*.scss\"",
    "angular:golden": "ts-api-guardian --out dist/golden/clr-angular.d.ts --stripExportPattern 'FocusTrapTracker' dist/clr-angular/index.d.ts",
    "angular:golden:fix": "npm run angular:build && ts-api-guardian --out golden/clr-angular.d.ts --stripExportPattern 'FocusTrapTracker' dist/clr-angular/index.d.ts",
    "angular:golden:test": "diff -u golden/clr-angular.d.ts dist/golden/clr-angular.d.ts",
    "angular:dev:preview": "npm run base:sass && ng build --baseHref=/dev/",
    "angular:dev:build": "ng build --prod dev",
    "angular:dev:build:dark": "ng build --prod dev -c dark",
    "angular:dev:start": "npm run base:sass && ng serve dev",
    "angular:dev:start:dark": "ng serve dev -c dark",
    "angular:dev:start:ie": "ng serve dev --disableHostCheck --host 0.0.0.0 --port 4200",
    "schematics:build:ts": "tsc -p ./src/schematics/tsconfig.json",
    "schematics:build:collection": "cpy --parents --cwd='src/schematics/src/' '**/*.json' ../../../dist/clr-angular/schematics",
    "schematics:build": "npm-run-all schematics:build:ts schematics:build:collection",
    "website:start": "npm run website:news && ng serve website",
    "website:build": "ng build website --prod --progress=false",
    "website:deploy-preview": "ng build website --progress=false",
    "website:404": "cpy --rename 404.html dist/website/browser/index.html dist/website/browser",
    "website:functions": "netlify-lambda build scripts/netlify",
    "website:news": "node src/website/generate-news",
    "website:prerender": "npm-run-all website:news website:build website:functions website:404",
    "website:preview": "lite-server --baseDir=dist/website/browser",
    "icons:build": "npm-run-all icons:build:css icons:build:optimize icons:build:web icons:build:package icons:build:svg",
    "icons:build:web": "webpack --config ./src/clr-icons/webpack.icons.config.js",
    "icons:build:css": "sass --source-map --precision=8 ./src/clr-icons/clr-icons.scss ./dist/clr-icons/clr-icons.css",
    "icons:build:optimize": "csso -i ./dist/clr-icons/clr-icons.css -o ./dist/clr-icons/clr-icons.min.css -s file;",
    "icons:build:package": "cpy ./npm/clr-icons/package.json ./npm/clr-icons/README.md ./dist/clr-icons/; replace '@VERSION' $npm_package_version ./dist/clr-icons/package.json",
    "icons:build:svg": "node ./scripts/clr-icons-svg.js",
    "ui:build": "npm-run-all ui:build:css ui:build:prefix ui:build:src ui:build:optimize ui:build:package",
    "ui:build:css": "sass --source-map --precision=8 ./src/clr-angular/main.scss ./dist/clr-ui/clr-ui.css; sass --source-map --precision=8 ./src/clr-angular/dark-theme.scss ./dist/clr-ui/clr-ui-dark.css",
    "ui:build:prefix": "postcss ./dist/clr-ui/clr-ui.css -o ./dist/clr-ui/clr-ui.css; postcss ./dist/clr-ui/clr-ui-dark.css -o ./dist/clr-ui/clr-ui-dark.css",
    "ui:build:src": "cpy --parents --cwd='src/clr-angular/' '**/*.scss' ../../dist/clr-ui/src/",
    "ui:build:optimize": "csso -i ./dist/clr-ui/clr-ui.css -o ./dist/clr-ui/clr-ui.min.css -s file; csso -i ./dist/clr-ui/clr-ui-dark.css -o ./dist/clr-ui/clr-ui-dark.min.css -s file",
    "ui:build:package": "cpy ./npm/clr-ui/package.json ./npm/clr-ui/README.md ./dist/clr-ui/; replace '@VERSION' $npm_package_version ./dist/clr-ui/package.json",
    "ui:lint": "stylelint --config ./src/clr-ui/.stylelintrc \"src/clr-ui/**/*.scss\"",
    "ui:lint:fix": "stylelint --config ./src/clr-ui/.stylelintrc --fix \"src/clr-ui/**/*.scss\"",
    "base:start": "npm run base:sass && npm run base:api && npm-run-all --parallel base:sass:watch base:dev:watch",
    "base:dev:watch": "npm run base:sass && ng serve dev-base",
    "base:dev:watch:prod": "npm run base:sass && ng serve dev-base --prod",
    "base:dev:build": "ng build dev-base --prod",
    "base:test": "npm run base:sass && ng test clr-base --watch=false && npm run base:golden:test",
    "base:test:watch": "ng test clr-base --watch --code-coverage",
    "base:build": "npm-run-all base:lint base:sass base:build:prepackage base:build:ngpackagr base:sass:global base:golden",
    "base:build:prepackage": "cpy ./npm/clr-base/package.json ./npm/clr-base/README.md ./src/clr-base/; replace '@VERSION' $npm_package_version ./src/clr-base/package.json",
    "base:build:ngpackagr": "ng build clr-base && node ./src/clr-base/modules.js",
    "base:golden": "ts-api-guardian --out dist/golden/clr-base.d.ts dist/clr-base/index.d.ts",
    "base:golden:fix": "npm run base:sass && npm run base:build:ngpackagr && ts-api-guardian --out golden/clr-base.d.ts dist/clr-base/index.d.ts",
    "base:golden:test": "diff -u golden/clr-base.d.ts dist/golden/clr-base.d.ts",
    "base:lint": "npm run prelint && tslint -p . -c ./src/clr-base/tslint.json \"src/clr-base/**/*.ts\" && tslint -p . -c ./src/dev-base/tslint.json \"src/dev-base/**/*.ts\" && stylelint --config ./src/clr-ui/.stylelintrc \"src/clr-base/**/*.scss\" \"src/dev-base/**/*.scss\"",
    "base:lint:fix": "npm run prelint && tslint --fix -p . -c ./src/clr-base/tslint.json \"src/clr-base/**/*.ts\" && tslint --fix -p . -c ./src/dev-base/tslint.json \"src/dev-base/**/*.ts\" && stylelint --config ./src/clr-ui/.stylelintrc --fix \"src/clr-base/**/*.scss\" \"src/dev-base/**/*.scss\"",
    "base:sass": "sass-render --q --suffix '.css.ts' -t ./src/clr-base/sass-template.js ./src/clr-base/**/*element.scss",
    "base:sass:watch": "sass-render --q --suffix '.css.ts' -t ./src/clr-base/sass-template.js ./src/clr-base/**/*element.scss -w",
    "base:sass:global": "sass --source-map --precision=8 ./src/clr-base/styles/global.scss ./dist/clr-base/clr-base-global.css && csso -i ./dist/clr-base/clr-base-global.css -o ./dist/clr-base/clr-base-global.min.css -s file",
    "base:api": "typedoc --tsconfig ./src/clr-base/tsconfig.lib.json --options ./src/clr-base/tsconfig.lib.json"
  },
  "dependencies": {
    "@angular/animations": "8.0.0",
    "@angular/common": "8.0.0",
    "@angular/compiler": "8.0.0",
    "@angular/core": "8.0.0",
    "@angular/forms": "8.0.0",
    "@angular/platform-browser": "8.0.0",
    "@angular/platform-browser-dynamic": "8.0.0",
    "@angular/platform-server": "8.0.0",
    "@angular/router": "8.0.0",
    "@webcomponents/custom-elements": "1.2.4",
    "@webcomponents/shadycss": "1.9.1",
    "@webcomponents/webcomponentsjs": "2.2.10",
    "core-js": "2.5.5",
    "jump.js": "1.0.2",
    "lit-element": "2.2.1",
    "normalize.css": "8.0.1",
    "prismjs": "1.14.0",
    "rxjs": "6.5.2",
    "web-animations-js": "github:angular/web-animations-js#release_pr208",
    "zone.js": "~0.9.1"
  },
  "optionalDependencies": {
    "cypress": "3.4.1"
  },
  "devDependencies": {
    "@angular-builders/custom-webpack": "8.1.0",
    "@angular-builders/dev-server": "7.3.1",
    "@angular-devkit/build-angular": "0.800.0",
    "@angular-devkit/build-ng-packagr": "0.800.0",
    "@angular-devkit/core": "8.0.0",
    "@angular/cli": "8.0.0",
    "@angular/compiler-cli": "8.0.0",
    "@angular/language-service": "8.0.0",
    "@applitools/eyes-cypress": "3.6.7",
    "@babel/core": "7.5.5",
    "@babel/plugin-transform-runtime": "^7.4.4",
    "@babel/preset-env": "^7.4.5",
    "@babel/runtime": "^7.4.5",
    "@commitlint/cli": "8.0.0",
    "@commitlint/config-conventional": "8.0.0",
    "@types/jasmine": "3.3.13",
    "@types/jasmine-expect": "3.8.1",
    "@types/jasmine-matchers": "0.2.32",
    "@types/jasminewd2": "2.0.6",
    "@types/node": "8.9.5",
    "autoprefixer": "9.5.1",
    "awesome-typescript-loader": "5.2.1",
    "axe-cli": "3.0.0",
    "babel-loader": "8.0.6",
    "cheerio": "1.0.0-rc.2",
    "codelyzer": "5.0.1",
    "conventional-changelog-cli": "2.0.23",
    "cpy-cli": "2.0.0",
    "cross-env": "5.2.0",
    "csso-cli": "2.0.2",
    "del-cli": "1.1.0",
    "detect-browser": "4.1.0",
    "dotenv": "8.1.0",
    "gemini": "7.4.1",
    "html-reporter": "3.6.4",
    "husky": "1.3.1",
    "jasmine-core": "3.4.0",
    "jasmine-expect": "4.0.1",
    "jasmine-spec-reporter": "4.2.1",
    "karma": "4.0.1",
    "karma-chrome-launcher": "2.2.0",
    "karma-coverage-istanbul-reporter": "2.0.5",
    "karma-edge-launcher": "0.4.2",
    "karma-firefox-launcher": "1.1.0",
    "karma-htmlfile-reporter": "0.3.8",
    "karma-ie-launcher": "1.0.0",
    "karma-jasmine": "2.0.1",
    "karma-jasmine-html-reporter": "1.4.2",
    "karma-jasmine-matchers": "4.0.1",
    "karma-mocha-reporter": "2.2.5",
    "karma-notify-reporter": "1.1.0",
    "karma-safari-launcher": "1.0.0",
    "karma-sauce-launcher": "2.0.2",
    "lite-server": "2.4.0",
    "netlify-lambda": "1.4.5",
    "ng-packagr": "5.2.0",
    "npm-run-all": "4.1.5",
    "postcss-cli": "6.1.2",
    "prettier": "1.12.1",
    "pretty-quick": "1.11.0",
    "replace": "1.1.0",
    "sass": "1.20.3",
    "shelljs": "0.8.3",
    "source-map": "0.7.3",
    "stylelint": "10.0.1",
    "stylelint-config-recommended": "2.2.0",
    "stylelint-scss": "3.9.2",
    "superagent": "5.1.0",
    "ts-api-guardian": "0.4.4",
    "ts-loader": "6.0.2",
    "ts-node": "8.2.0",
    "tsickle": "0.35.0",
    "tslib": "1.10.0",
    "tslint": "5.17.0",
    "tslint-config-prettier": "1.18.0",
    "tslint-defocus": "2.0.6",
    "typedoc": "0.15.0",
    "typedoc-plugin-no-inherit": "1.1.10",
    "typescript": "3.4.5",
    "uglifyjs": "2.4.11",
    "uglifyjs-webpack-plugin": "2.1.2",
    "wc-sass-render": "1.2.1",
    "webpack-cli": "3.3.1",
    "xml-js": "1.6.11"
  },
  "engines": {
    "node": ">=10.9.0 <11.0.0",
    "npm": ">=5.0.0"
  },
  "husky": {
    "hooks": {
      "pre-commit": "npm run format:fix && npm run license:fix",
      "commit-msg": "commitlint -E HUSKY_GIT_PARAMS"
    }
  }
}
