// Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.
// This software is released under MIT license.
// The full license information can be found in LICENSE in the root directory of this project.

@mixin generateAlignments($breakpoint: null) {
  [#{$layout}~='#{$horizontal}'] {
    &[#{$layout}*='#{$align}#{$breakpoint}:#{$top}'] {
      align-content: flex-start;
    }

    &[#{$layout}*='#{$align}#{$breakpoint}:#{$bottom}'] {
      align-content: flex-end;
    }

    &[#{$layout}*='#{$align}#{$breakpoint}:#{$vertical-center}'] {
      align-content: center;
    }

    &[#{$layout}*='#{$align}#{$breakpoint}:#{$left}'] {
      justify-content: flex-start;
    }

    &[#{$layout}*='#{$align}#{$breakpoint}:#{$horizontal-stretch}'] {
      justify-content: stretch;
      flex-grow: 1;
    }

    &[#{$layout}*='#{$align}#{$breakpoint}:#{$vertical-stretch}'] {
      align-content: stretch;
    }

    &[#{$layout}*='#{$align}#{$breakpoint}:#{$right}'] {
      justify-content: flex-end;
    }

    &[#{$layout}*='#{$align}#{$breakpoint}:#{$horizontal-center}'] {
      justify-content: center;
    }

    &[#{$layout}*='#{$align}#{$breakpoint}:#{$center}'] {
      justify-content: center;
      align-content: center;
    }

    &[#{$layout}*='#{$align}#{$breakpoint}:#{$fill}'] > *,
    &[#{$layout}*='#{$align}#{$breakpoint}:#{$fill}']::slotted(*) {
      flex-grow: 1 !important;
      flex-basis: 0 !important;
    }

    &[#{$layout}*='#{$align}#{$breakpoint}:#{$stretch}'] {
      justify-content: stretch;
      align-content: stretch;
    }

    &[#{$layout}*='#{$align}#{$breakpoint}:#{$stretch}'] > *,
    &[#{$layout}*='#{$align}#{$breakpoint}:#{$horizontal-stretch}'] > *,
    &[#{$layout}*='#{$align}#{$breakpoint}:#{$stretch}']::slotted(*),
    &[#{$layout}*='#{$align}#{$breakpoint}:#{$horizontal-stretch}']::slotted(*) {
      flex-grow: 1 !important;
    }

    &[#{$layout}*='#{$align}#{$breakpoint}:#{$stretch}'] > *,
    &[#{$layout}*='#{$align}#{$breakpoint}:#{$vertical-stretch}'],
    &[#{$layout}*='#{$align}#{$breakpoint}:#{$stretch}']::slotted(*),
    &[#{$layout}*='#{$align}#{$breakpoint}:#{$vertical-stretch}']::slotted(*) {
      align-content: stretch !important;
    }

    &[#{$layout}~='wrap#{$breakpoint}:none'] {
      flex-wrap: nowrap;
    }

    &[#{$layout}~='order#{$breakpoint}:reverse'] {
      flex-direction: row-reverse;
    }

    // Align Single Item
    & > [#{$layout}*='#{$align}#{$breakpoint}:#{$stretch}'],
    &::slotted([#{$layout}*='#{$align}#{$breakpoint}:#{$stretch}']) {
      flex-grow: 1 !important;
    }

    & > [#{$layout}*='#{$align}#{$breakpoint}:#{$shrink}'],
    &::slotted([#{$layout}*='#{$align}#{$breakpoint}:#{$shrink}']) {
      flex-shrink: 1 !important;
      flex-grow: 0 !important;
    }

    & > [#{$layout}*='#{$align}#{$breakpoint}:#{$center}'],
    & > [#{$layout}*='#{$align}#{$breakpoint}:#{$vertical-center}'],
    &::slotted([#{$layout}*='#{$align}#{$breakpoint}:#{$center}']),
    &::slotted([#{$layout}*='#{$align}#{$breakpoint}:#{$vertical-center}']) {
      align-self: center;
    }

    & > [#{$layout}*='#{$align}#{$breakpoint}:#{$center}'],
    & > [#{$layout}*='#{$align}#{$breakpoint}:#{$horizontal-center}'],
    &::slotted([#{$layout}*='#{$align}#{$breakpoint}:#{$center}']),
    &::slotted([#{$layout}*='#{$align}#{$breakpoint}:#{$horizontal-center}']) {
      margin-left: auto !important;
      margin-right: auto !important;
    }

    & > [#{$layout}*='#{$align}#{$breakpoint}:#{$top}'],
    &::slotted([#{$layout}*='#{$align}#{$breakpoint}:#{$top}']) {
      align-self: flex-start;
    }

    & > [#{$layout}*='#{$align}#{$breakpoint}:#{$bottom}'],
    &::slotted([#{$layout}*='#{$align}#{$breakpoint}:#{$bottom}']) {
      align-self: flex-end;
    }

    & > [#{$layout}*='#{$align}#{$breakpoint}:#{$right}'],
    &::slotted([#{$layout}*='#{$align}#{$breakpoint}:#{$right}']) {
      margin-left: auto !important;
    }

    & > [#{$layout}*='#{$align}#{$breakpoint}:#{$left}'],
    &::slotted([#{$layout}*='#{$align}#{$breakpoint}:#{$left}']) {
      margin-right: auto !important;
    }
  }
}

[#{$layout}~='#{$horizontal}'] {
  position: relative;
  display: flex;
  flex-direction: row;
  flex-wrap: wrap;
  justify-content: flex-start;
  align-content: flex-start;
  width: 100%;
  margin: 0;
  min-height: 0;

  > [#{$layout}~='#{$horizontal}'],
  > [#{$layout}~='#{$vertical}'],
  > [cds-text] {
    width: initial !important;
  }
}

@include generateAlignments();

@each $breakpoint, $breakpoint-value in $cds-layout-breakpoints {
  @media (min-width: $breakpoint-value) {
    @include generateAlignments($breakpoint);
  }
}
